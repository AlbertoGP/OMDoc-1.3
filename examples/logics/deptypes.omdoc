<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.3//EN"
                "../../dtd/omdoc.dtd" []>
<omdoc xmlns:dc="http://purl.org/dc/elements/1.1/"  xmlns="http://omdoc.org/ns"
xml:id="pvs.omdoc">

<metadata>
 <dc:creator role="aut">Michael Kohlhase</dc:creator>
 <dc:date action="created">2001-05-19T00:00:00</dc:date>
 <dc:title>Dependent Types</dc:title>
 <dc:rights>GPL</dc:rights>
</metadata>

<omtext xml:id="intro">
 <CMP>This document defines the dependent types discipline.</CMP>
</omtext>

<theory xml:id="deptypes">
	 
<symbol name="sigmatype">
<metadata>
<dc:description>The dependent function type constructor</dc:description>
</metadata>
</symbol>

<presentation xml:id="pr-sigmatype" for="#sigmatype" role="binding">
 <style format="pvs">
   <text>[</text>
    <recurse select="*[2]/*"/><text> -&gt; </text><recurse select="*[3]"/>
   <text>]</text>
 </style>
</presentation>

<symbol name="dependent-recordtype">
<metadata>
<dc:description>The dependent record type constructor. It takes an even number of
  arguments. The even ones  are field names (currently they are OMS symbols in the
  pseudo-theory 'record-field' and the odd ones their values.</dc:description>
</metadata>
</symbol>

<presentation xml:id="pr-dependent-recordtype" for="#dependent-recordtype" role="applied">
  <use format="pvs" lbrack="[# " rbrack=" #]"/>
</presentation>

<symbol name="dependent-tupletype">
<metadata>
<dc:description>The dependent tuple type constructor.</dc:description>
</metadata>
</symbol>

<presentation xml:id="pr-dependent-tupletype" for="#dependent-tupletype" role="applied">
  <use format="pvs" lbrack="[" rbrack="]"/>
</presentation>

<symbol name="dependent-cotupletype">
<metadata>
<dc:description>The dependent-co-tuple type constructor (useful for formalizing
  co-algebras).</dc:description>
</metadata>
</symbol>

<presentation xml:id="pr-dependent-cotupletype" for="#dependent-cotupletype" role="applied">
  <use format="pvs" lbrack="[ " rbrack=" ]" separator="+"/>
</presentation>

<omtext xml:id="no-type-constructors">
 <CMP>We do not need any term constructors for dependent types, we can take the
   ones defined in theory simpletypes 
 </CMP>
</omtext>
</theory>


</omdoc>
