<?xml version="1.0"?>
<!--
    An XSL style sheet for presenting OpenMath Symbols used in the 
    OpenMath Document (OMDoc) inference-rules.omdoc.omdoc.
  
    This XSL style file is automatically generated from an OMDoc document, do not edit!
  -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:om="http://www.openmath.org/OpenMath" xmlns:omdoc="http://www.mathweb.org/omdoc" version="1.0" exsl:dummy="to get the namespace right" xlink:dummy="to get the namespace right" om:dummy="to get the namespace right" omdoc:dummy="to get the namespace right" extension-element-prefixes="exsl">

<xsl:template match="om:OMBIND[not(@xref) and  om:OMS[position()=1 and @name='schema' and @cd='inference-rules' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='inference-rules']/@omdoc)"/><xsl:variable name="name" select="'schema'"/><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="*[3]"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:when><xsl:otherwise/></xsl:choose></xsl:template>

<xsl:template match="om:OMA[not(@xref) and om:OMS[position()=1 and @name='rule' and @cd='inference-rules' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='inference-rules']/@omdoc)"/><xsl:variable name="name" select="'rule'"/><xsl:choose><xsl:when test="$format='TeX'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:text>{\displaystyle{{</xsl:text><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open"/><xsl:with-param name="close"/><xsl:with-param name="content"><xsl:for-each select="*[position() &gt;1 and position() &lt;last()]"><xsl:text>{</xsl:text><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="."><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates><xsl:text>}\;\;\;</xsl:text><xsl:if test="position()!=last()"/></xsl:for-each></xsl:with-param></xsl:call-template><xsl:text>}\over{</xsl:text><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="*[last()]"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates><xsl:text>}}}</xsl:text></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:when test="$format='html'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:element name="table" namespace="http://www.w3.org/1999/xhtml"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:attribute name="rules"><xsl:text>rows</xsl:text></xsl:attribute><xsl:element name="tr" namespace="http://www.w3.org/1999/xhtml"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:element name="td" namespace="http://www.w3.org/1999/xhtml"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:attribute name="align"><xsl:text>center</xsl:text></xsl:attribute><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open"/><xsl:with-param name="close"/><xsl:with-param name="content"><xsl:for-each select="*[position() &gt;1 and position() &lt;last()]"><xsl:text>&amp;nbsp;&amp;nbsp;&amp;nbsp;</xsl:text><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="."><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates><xsl:if test="position()!=last()"/></xsl:for-each></xsl:with-param></xsl:call-template></xsl:element></xsl:element><xsl:element name="tr" namespace="http://www.w3.org/1999/xhtml"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:element name="td" namespace="http://www.w3.org/1999/xhtml"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:attribute name="align"><xsl:text>center</xsl:text></xsl:attribute><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="*[last()]"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:element></xsl:element></xsl:element></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:when test="$format='pmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:element name="mtable" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:attribute name="rowlines"><xsl:text>solid</xsl:text></xsl:attribute><xsl:element name="mtr" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:element name="mtd" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open"/><xsl:with-param name="close"/><xsl:with-param name="content"><xsl:for-each select="*[position() &gt;1 and position() &lt;last()]"><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="."><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates><xsl:if test="position()!=last()"><xsl:element name="mspace" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:attribute name="width"><xsl:text>2em</xsl:text></xsl:attribute></xsl:element></xsl:if></xsl:for-each></xsl:with-param></xsl:call-template></xsl:element></xsl:element><xsl:element name="mtr" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><xsl:element name="mtd" namespace="http://www.w3.org/1998/Math/MathML"><xsl:attribute name="xlink:href"><xsl:value-of select="omdoc:crossref($omdoc,$name,$crossref-format)"/></xsl:attribute><!--somehow I need this comment, otherwise xsltproc does not generate the rest--><xsl:apply-templates select="*[last()]"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:element></xsl:element></xsl:element></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:apply-templates select="." mode="fallback"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template>

</xsl:stylesheet>
